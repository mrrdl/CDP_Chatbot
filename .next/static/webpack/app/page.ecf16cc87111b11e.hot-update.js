"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./services/nlpService.ts":
/*!********************************!*\
  !*** ./services/nlpService.ts ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   processUserInput: function() { return /* binding */ processUserInput; }\n/* harmony export */ });\n/* harmony import */ var _mockDocumentationService__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mockDocumentationService */ \"(app-pages-browser)/./services/mockDocumentationService.ts\");\n\nasync function processUserInput(input) {\n    const lowercaseInput = input.toLowerCase();\n    if (!isRelevantQuestion(lowercaseInput)) {\n        return \"I'm sorry, but I can only answer questions related to Customer Data Platforms (CDPs). Could you please ask a question about Segment, mParticle, Lytics, or Zeotap?\";\n    }\n    const comparisonResult = await handleComparisonQuestion(lowercaseInput);\n    if (comparisonResult) {\n        return comparisonResult;\n    }\n    const cdp = identifyCDP(lowercaseInput);\n    const action = extractAction(lowercaseInput);\n    try {\n        const result = await (0,_mockDocumentationService__WEBPACK_IMPORTED_MODULE_0__.fetchDocumentation)(cdp, action);\n        return result;\n    } catch (error) {\n        console.error(\"Error processing user input:\", error);\n        return \"I'm sorry, I encountered an unexpected error. Please try asking your question again or rephrase it.\";\n    }\n}\nfunction isRelevantQuestion(input) {\n    const cdpKeywords = [\n        \"segment\",\n        \"mparticle\",\n        \"lytics\",\n        \"zeotap\",\n        \"cdp\",\n        \"customer data platform\"\n    ];\n    return cdpKeywords.some((keyword)=>input.includes(keyword));\n}\nfunction identifyCDP(input) {\n    if (input.includes(\"segment\")) return \"segment\";\n    if (input.includes(\"mparticle\")) return \"mparticle\";\n    if (input.includes(\"lytics\")) return \"lytics\";\n    if (input.includes(\"zeotap\")) return \"zeotap\";\n    return \"general\";\n}\nfunction extractAction(input) {\n    const actionKeywords = [\n        \"create\",\n        \"set up\",\n        \"integrate\",\n        \"build\",\n        \"use\",\n        \"configure\",\n        \"implement\",\n        \"install\",\n        \"connect\",\n        \"manage\"\n    ];\n    for (const action of actionKeywords){\n        if (input.includes(action)) {\n            return action;\n        }\n    }\n    return input.replace(/[^a-zA-Z0-9 ]/g, \"\").trim();\n}\nasync function handleComparisonQuestion(input) {\n    const comparisonKeywords = [\n        \"compare\",\n        \"difference\",\n        \"versus\",\n        \"vs\"\n    ];\n    if (comparisonKeywords.some((keyword)=>input.includes(keyword))) {\n        const cdps = [\n            \"segment\",\n            \"mparticle\",\n            \"lytics\",\n            \"zeotap\"\n        ];\n        const mentionedCDPs = cdps.filter((cdp)=>input.includes(cdp));\n        if (mentionedCDPs.length === 2) {\n            const feature = extractComparisonFeature(input);\n            const cdp1Data = await (0,_mockDocumentationService__WEBPACK_IMPORTED_MODULE_0__.fetchDocumentation)(mentionedCDPs[0], feature);\n            const cdp2Data = await (0,_mockDocumentationService__WEBPACK_IMPORTED_MODULE_0__.fetchDocumentation)(mentionedCDPs[1], feature);\n            const comparison = \"\\n        \".concat(mentionedCDPs[0].charAt(0).toUpperCase() + mentionedCDPs[0].slice(1), \":\\n        \").concat(cdp1Data, \"\\n\\n        \").concat(mentionedCDPs[1].charAt(0).toUpperCase() + mentionedCDPs[1].slice(1), \":\\n        \").concat(cdp2Data, \"\\n\\n        Comparison:\\n        Both CDPs offer \").concat(feature, \" capabilities, but there are some differences in their approaches.\\n        \").concat(mentionedCDPs[0].charAt(0).toUpperCase() + mentionedCDPs[0].slice(1), \" \").concat(cdp1Data.includes(\"offers\") ? \"emphasizes\" : \"focuses on\", \" \").concat(cdp1Data.split(\".\")[0].toLowerCase(), \".\\n        On the other hand, \").concat(mentionedCDPs[1].charAt(0).toUpperCase() + mentionedCDPs[1].slice(1), \" \").concat(cdp2Data.includes(\"offers\") ? \"emphasizes\" : \"focuses on\", \" \").concat(cdp2Data.split(\".\")[0].toLowerCase(), \".\\n        Consider your specific needs and use cases when choosing between these platforms.\\n      \");\n            return {\n                cdp1: mentionedCDPs[0],\n                cdp2: mentionedCDPs[1],\n                feature,\n                comparison\n            };\n        }\n    }\n    return null;\n}\nfunction extractComparisonFeature(input) {\n    const features = [\n        \"audience creation\",\n        \"data integration\",\n        \"reporting\",\n        \"privacy compliance\"\n    ];\n    for (const feature of features){\n        if (input.includes(feature)) {\n            return feature;\n        }\n    }\n    return \"general features\";\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./services/nlpService.ts\n"));

/***/ })

});